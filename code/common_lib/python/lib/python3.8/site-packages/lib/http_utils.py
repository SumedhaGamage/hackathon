import json

common_headers = {
            'Access-Control-Allow-Headers': "Content-Type,Authorization",
            'Access-Control-Allow-Origin': 'https://*.ezdoc.lk,https://uat.ezdoc.lk',
            'Access-Control-Allow-Methods': 'OPTIONS,POST,GET,DELETE',
            'Content-Type': "application/json",
        }


class HttpStatus:
    OK = 200
    CREATED = 201
    BAD_REQUEST = 400
    UNAUTHORIZED = 401
    FORBIDDEN = 403
    NOT_FOUND = 404
    INTERNAL_SERVER_ERROR = 500


class GeneralMessage:

    def __init__(self, message=None, errorCode=0, **kwargs):
        self.message = message
        self.errorCode = errorCode

    @staticmethod
    def load(data):
        return GeneralMessage(**data)

    def to_json(self):
        return json.dumps(self.__dict__)


def send_common_server_error(headers=None):
    return send_response(GeneralMessage('Internal server error'), HttpStatus.INTERNAL_SERVER_ERROR, headers)


def send_error(message, errorCode=0, statusCode=HttpStatus.INTERNAL_SERVER_ERROR, headers=None):
    return send_response(GeneralMessage(message, errorCode), statusCode, headers)

def send_common_success(message='OK', statusCode=HttpStatus.OK, headers=None):
    return send_response(GeneralMessage(message), statusCode, headers)

def send_response(body, statusCode=HttpStatus.OK, headers=None):
    return send_response_dict(body.__dict__, statusCode, headers)


def send_response_dict(body, statusCode=HttpStatus.OK, headers=None):
    if headers is not None:
        common_headers.update(headers)
    return {
        'statusCode': statusCode,
        'body': json.dumps(body),
        'headers': common_headers
    }




